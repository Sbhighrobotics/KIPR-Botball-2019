#include <kipr/botball.h>
int speed = 2000;
int leftMotor = 1;
int rightMotor = 0;
int highGrey= 2900;
int middle = 3200;
int lowBlack = 3300;

void follow();
void goTillBlack();
void turnTillGrey();
void followCamera();

void turnLeft(int t)
{
    mav(rightMotor, speed);
    mav(leftMotor, -speed);
    msleep(t);
    mav(rightMotor, 0);
    mav(leftMotor, 0);
}

void turnRight(int t)
{
    mav(leftMotor, speed);
    mav(rightMotor, -speed);
    msleep(t);
    mav(rightMotor, 0);
    mav(leftMotor, 0);
}

void goForward(int t)
{
    mav(leftMotor, speed*-1);
    mav(rightMotor, (speed)*.8);
    msleep(t);
    mav(rightMotor, 0);
    mav(leftMotor, 0);
}

void wideTurn(int d, int t)
{
    if(d == 1)
    {
        mav(leftMotor, speed/3);
        mav(rightMotor, speed);
        msleep(t);
        mav(rightMotor, 0);
        mav(leftMotor, 0);
        printf("I'm left");
    }else
    {
        printf("I'm right");
        mav(rightMotor, speed/3);
        mav(leftMotor, speed);
        msleep(t);
        mav(rightMotor, 0);
        mav(leftMotor, 0);
    }
}

int main()
{
    camera_open();
    //turnLeft(100);
    //goForward(5000);
    //wideTurn(1, 3000);

    goTillBlack();
    mav(rightMotor,speed);
    mav(leftMotor,0);
    msleep(1800);
    //int c=1;
    //int r=-1;
    //int y = -1;
    /*
    while(c>0)
    {
        camera_update();
        r = get_object_bbox_width(1,0);
        y = get_object_bbox_width(0,0);
        printf("%d,%d\n", r,y);


    }
    */
    follow();
    printf("\ndone1\n");
    
    followCamera();
    printf("done2");
    return 0;
}

void goTillBlack()
{
    mav(rightMotor,speed);
    mav(leftMotor,speed);
    msleep(2000);
    while(analog(0)<lowBlack)
    {
        mav(rightMotor,speed);
        mav(leftMotor,speed);
        msleep(100);
        mav(rightMotor,0);
        mav(leftMotor,0);      
    }
}



void follow()
{

    int r = get_object_bbox_width(0,0);
    //int y = get_object_bbox_width(0,0);
    while(get_object_count(0) ==0 || r < 12)

    {

        if(analog(0)<=highGrey)
        {
            mav(rightMotor,speed/2);
            mav(leftMotor,speed);
            msleep(2);

            printf("on grey");
        }else if(analog(0)>=lowBlack)
        {
            mav(leftMotor,speed/2);
            mav(rightMotor,speed);
            msleep(2);

            printf("on black");
        }else
        {
            mav(rightMotor,speed);
            mav(leftMotor,speed);
            msleep(100);
            //mav(rightMotor,0);
            //mav(leftMotor,0);
        }
        camera_update();
        r = get_object_bbox_width(0,0);
        //y = get_object_bbox_width(0,0);
    }
    mav(rightMotor,0);
    mav(leftMotor,0);
}

void followCamera()
{
    
    int width = get_object_bbox_width(0,0);
    int x = get_object_center_x(0,0);
    while(width<70)
    {
        if(x<70)
        {
            mav(rightMotor, speed);
             mav(leftMotor, speed/2);
            msleep(100);
        }
        if(x>70)
        {
             mav(leftMotor, speed);
             mav(rightMotor, speed/2);
            msleep(100);
        }
    }
}






